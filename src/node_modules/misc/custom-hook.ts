import { useEffect, useReducer } from "react"


const showsReducer = (prev, action) => {
    switch (action.type) {
        case "ADD":
            return { ...prev, action.showId }
        case "REMOVE":
            return prev.filter(showId => showId !== action.showId)
        default:
            return prev
    }
}

function usePersistedReducer(reducer, initialState, key) {
    const [state, dispatch] = useReducer(reducer, initialState, (initial) => {
        const persisited = localStorage.getItem(key)
        return persisited ? JSON.parse(persisited) : initial
    })

    useEffect(() => {
        localStorage.setItem(key, JSON.stringify(state))
    }, [state, key])

    return [state, dispatch]
}


export function useShows(key) {
    return usePersistedReducer(showsReducer, [], key)
}
