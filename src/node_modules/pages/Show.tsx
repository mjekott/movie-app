import React, { useEffect, useReducer, useState } from 'react'
import { useParams } from "react-router-dom"
import { apiGet } from "misc/config"

type ActionType {
    type: string,
    payload:any
}

const initialSatte = {
    show: null,
    isLoading: true,
    error:null
}

const reducer = (prevState:typeof initialSatte, action:ActionType){
    switch (action.type) {
        case 'FETCH_SUCCESS':
            return {...prevState,isLoading:false,show:action.payload}

        case 'FETCH_FAILED': {
            return {...prevState,isLoading:false,show:action.payload}
        }

        default:
            return prevState
    }
}

const Show = () => {
    const { id } = useParams()
    const [{isLoading,show,error},dispatch] = useReducer(reducer,initialSatte)

    useEffect(() => {
        let isMounted = true;
        apiGet(`/shows/${id}?embed[]=season&embed[]=cast`).then(results => {
            if (isMounted) {
                dispatch({type:"FETCH_SUCCESS",payload:results})
            }
        }).catch(err => {
            if (isMounted) {
              dispatch({type:"FETCH_FAILED",payload:err})
            }

        })
        return () => {
       isMounted = false
        }
    }, [id])


    if (isLoading) {
        return <div>Data is being loaded</div>
    }

    if (error) {
        return <div>An Error occured</div>
    }

  return (
    <div>Show</div>
  )
}

export default Show